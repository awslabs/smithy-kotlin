/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */
package software.amazon.smithy.kotlin.codegen.rendering.endpoints

import software.amazon.smithy.codegen.core.Symbol
import software.amazon.smithy.kotlin.codegen.core.CodegenContext
import software.amazon.smithy.kotlin.codegen.core.KotlinWriter
import software.amazon.smithy.kotlin.codegen.core.RuntimeTypes
import software.amazon.smithy.kotlin.codegen.core.withBlock
import software.amazon.smithy.kotlin.codegen.model.buildSymbol

/**
 * Generates the endpoint provider interface.
 *
 * The default implementation of the provider is generated by [DefaultEndpointProviderGenerator].
 */
class EndpointProviderGenerator(
    private val writer: KotlinWriter,
    private val paramsSymbol: Symbol,
) {
    companion object {
        const val CLASS_NAME = "EndpointProvider"

        fun getSymbol(ctx: CodegenContext): Symbol =
            buildSymbol {
                name = CLASS_NAME
                namespace = "${ctx.settings.pkg.name}.endpoints"
            }
    }

    fun render() {
        writer.withBlock("public fun interface #L {", "}", CLASS_NAME) {
            write("public suspend fun resolveEndpoint(params: #T): #T", paramsSymbol, RuntimeTypes.Http.Endpoints.Endpoint)
        }
    }
}
