/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0.
 */

// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.smithy.kotlin.benchmarks.serde.json.twitter.transform

import aws.smithy.kotlin.benchmarks.serde.json.twitter.model.Entities
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.Serializer
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.json.JsonSerialName
import aws.smithy.kotlin.runtime.serde.serializeStruct

internal fun serializeEntitiesDocument(serializer: Serializer, input: Entities) {
    val HASHTAGS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, JsonSerialName("hashtags"))
    val MEDIA_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, JsonSerialName("media"))
    val URLS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, JsonSerialName("urls"))
    val USERMENTIONS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, JsonSerialName("user_mentions"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        field(HASHTAGS_DESCRIPTOR)
        field(MEDIA_DESCRIPTOR)
        field(URLS_DESCRIPTOR)
        field(USERMENTIONS_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        if (input.hashtags != null) {
            listField(HASHTAGS_DESCRIPTOR) {
                for (el0 in input.hashtags) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeHashtagDocument))
                }
            }
        }
        if (input.media != null) {
            listField(MEDIA_DESCRIPTOR) {
                for (el0 in input.media) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeMediaDocument))
                }
            }
        }
        if (input.urls != null) {
            listField(URLS_DESCRIPTOR) {
                for (el0 in input.urls) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeUrlDocument))
                }
            }
        }
        if (input.userMentions != null) {
            listField(USERMENTIONS_DESCRIPTOR) {
                for (el0 in input.userMentions) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeUserMentionDocument))
                }
            }
        }
    }
}
