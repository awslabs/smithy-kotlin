/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0.
 */

// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.smithy.kotlin.benchmarks.serde.json.twitter.model

class Entities private constructor(builder: BuilderImpl) {
    val hashtags: List<Hashtag>? = builder.hashtags
    val media: List<Media>? = builder.media
    val urls: List<Url>? = builder.urls
    val userMentions: List<UserMention>? = builder.userMentions

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): Entities = BuilderImpl().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("Entities(")
        append("hashtags=$hashtags,")
        append("media=$media,")
        append("urls=$urls,")
        append("userMentions=$userMentions)")
    }

    override fun hashCode(): kotlin.Int {
        var result = hashtags?.hashCode() ?: 0
        result = 31 * result + (media?.hashCode() ?: 0)
        result = 31 * result + (urls?.hashCode() ?: 0)
        result = 31 * result + (userMentions?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as Entities

        if (hashtags != other.hashtags) return false
        if (media != other.media) return false
        if (urls != other.urls) return false
        if (userMentions != other.userMentions) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): Entities = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): Entities
        fun hashtags(hashtags: List<Hashtag>): FluentBuilder
        fun media(media: List<Media>): FluentBuilder
        fun urls(urls: List<Url>): FluentBuilder
        fun userMentions(userMentions: List<UserMention>): FluentBuilder
    }

    interface DslBuilder {
        var hashtags: List<Hashtag>?
        var media: List<Media>?
        var urls: List<Url>?
        var userMentions: List<UserMention>?

        fun build(): Entities
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var hashtags: List<Hashtag>? = null
        override var media: List<Media>? = null
        override var urls: List<Url>? = null
        override var userMentions: List<UserMention>? = null

        constructor(x: Entities) : this() {
            this.hashtags = x.hashtags
            this.media = x.media
            this.urls = x.urls
            this.userMentions = x.userMentions
        }

        override fun build(): Entities = Entities(this)
        override fun hashtags(hashtags: List<Hashtag>): FluentBuilder = apply { this.hashtags = hashtags }
        override fun media(media: List<Media>): FluentBuilder = apply { this.media = media }
        override fun urls(urls: List<Url>): FluentBuilder = apply { this.urls = urls }
        override fun userMentions(userMentions: List<UserMention>): FluentBuilder = apply { this.userMentions = userMentions }
    }
}
