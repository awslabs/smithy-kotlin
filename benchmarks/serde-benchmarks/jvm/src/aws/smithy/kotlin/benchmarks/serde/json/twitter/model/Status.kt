/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0.
 */

// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.smithy.kotlin.benchmarks.serde.json.twitter.model

class Status private constructor(builder: BuilderImpl) {
    val createdAt: String? = builder.createdAt
    val entities: Entities? = builder.entities
    val favorited: Boolean? = builder.favorited
    val id: Long? = builder.id
    val idStr: String? = builder.idStr
    val possiblySensitive: Boolean? = builder.possiblySensitive
    val retweetCount: Int? = builder.retweetCount
    val retweeted: Boolean? = builder.retweeted
    val source: String? = builder.source
    val text: String? = builder.text
    val truncated: Boolean? = builder.truncated
    val user: User? = builder.user

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): Status = BuilderImpl().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("Status(")
        append("createdAt=$createdAt,")
        append("entities=$entities,")
        append("favorited=$favorited,")
        append("id=$id,")
        append("idStr=$idStr,")
        append("possiblySensitive=$possiblySensitive,")
        append("retweetCount=$retweetCount,")
        append("retweeted=$retweeted,")
        append("source=$source,")
        append("text=$text,")
        append("truncated=$truncated,")
        append("user=$user)")
    }

    override fun hashCode(): kotlin.Int {
        var result = createdAt?.hashCode() ?: 0
        result = 31 * result + (entities?.hashCode() ?: 0)
        result = 31 * result + (favorited?.hashCode() ?: 0)
        result = 31 * result + (id?.hashCode() ?: 0)
        result = 31 * result + (idStr?.hashCode() ?: 0)
        result = 31 * result + (possiblySensitive?.hashCode() ?: 0)
        result = 31 * result + (retweetCount ?: 0)
        result = 31 * result + (retweeted?.hashCode() ?: 0)
        result = 31 * result + (source?.hashCode() ?: 0)
        result = 31 * result + (text?.hashCode() ?: 0)
        result = 31 * result + (truncated?.hashCode() ?: 0)
        result = 31 * result + (user?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as Status

        if (createdAt != other.createdAt) return false
        if (entities != other.entities) return false
        if (favorited != other.favorited) return false
        if (id != other.id) return false
        if (idStr != other.idStr) return false
        if (possiblySensitive != other.possiblySensitive) return false
        if (retweetCount != other.retweetCount) return false
        if (retweeted != other.retweeted) return false
        if (source != other.source) return false
        if (text != other.text) return false
        if (truncated != other.truncated) return false
        if (user != other.user) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): Status = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): Status
        fun createdAt(createdAt: String): FluentBuilder
        fun entities(entities: Entities): FluentBuilder
        fun favorited(favorited: Boolean): FluentBuilder
        fun id(id: Long): FluentBuilder
        fun idStr(idStr: String): FluentBuilder
        fun possiblySensitive(possiblySensitive: Boolean): FluentBuilder
        fun retweetCount(retweetCount: Int): FluentBuilder
        fun retweeted(retweeted: Boolean): FluentBuilder
        fun source(source: String): FluentBuilder
        fun text(text: String): FluentBuilder
        fun truncated(truncated: Boolean): FluentBuilder
        fun user(user: User): FluentBuilder
    }

    interface DslBuilder {
        var createdAt: String?
        var entities: Entities?
        var favorited: Boolean?
        var id: Long?
        var idStr: String?
        var possiblySensitive: Boolean?
        var retweetCount: Int?
        var retweeted: Boolean?
        var source: String?
        var text: String?
        var truncated: Boolean?
        var user: User?

        fun build(): Status
        /**
         * construct an [aws.smithy.kotlin.benchmarks.serde.json.twitter.model.Entities] inside the given [block]
         */
        fun entities(block: Entities.DslBuilder.() -> kotlin.Unit) {
            this.entities = Entities.invoke(block)
        }
        /**
         * construct an [aws.smithy.kotlin.benchmarks.serde.json.twitter.model.User] inside the given [block]
         */
        fun user(block: User.DslBuilder.() -> kotlin.Unit) {
            this.user = User.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var createdAt: String? = null
        override var entities: Entities? = null
        override var favorited: Boolean? = null
        override var id: Long? = null
        override var idStr: String? = null
        override var possiblySensitive: Boolean? = null
        override var retweetCount: Int? = null
        override var retweeted: Boolean? = null
        override var source: String? = null
        override var text: String? = null
        override var truncated: Boolean? = null
        override var user: User? = null

        constructor(x: Status) : this() {
            this.createdAt = x.createdAt
            this.entities = x.entities
            this.favorited = x.favorited
            this.id = x.id
            this.idStr = x.idStr
            this.possiblySensitive = x.possiblySensitive
            this.retweetCount = x.retweetCount
            this.retweeted = x.retweeted
            this.source = x.source
            this.text = x.text
            this.truncated = x.truncated
            this.user = x.user
        }

        override fun build(): Status = Status(this)
        override fun createdAt(createdAt: String): FluentBuilder = apply { this.createdAt = createdAt }
        override fun entities(entities: Entities): FluentBuilder = apply { this.entities = entities }
        override fun favorited(favorited: Boolean): FluentBuilder = apply { this.favorited = favorited }
        override fun id(id: Long): FluentBuilder = apply { this.id = id }
        override fun idStr(idStr: String): FluentBuilder = apply { this.idStr = idStr }
        override fun possiblySensitive(possiblySensitive: Boolean): FluentBuilder = apply { this.possiblySensitive = possiblySensitive }
        override fun retweetCount(retweetCount: Int): FluentBuilder = apply { this.retweetCount = retweetCount }
        override fun retweeted(retweeted: Boolean): FluentBuilder = apply { this.retweeted = retweeted }
        override fun source(source: String): FluentBuilder = apply { this.source = source }
        override fun text(text: String): FluentBuilder = apply { this.text = text }
        override fun truncated(truncated: Boolean): FluentBuilder = apply { this.truncated = truncated }
        override fun user(user: User): FluentBuilder = apply { this.user = user }
    }
}
