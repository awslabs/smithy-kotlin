/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0.
 */

// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.smithy.kotlin.benchmarks.serde.json.twitter.transform

import aws.smithy.kotlin.benchmarks.serde.json.twitter.model.SearchMetadata
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.Serializer
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.json.JsonSerialName
import aws.smithy.kotlin.runtime.serde.serializeStruct

internal fun serializeSearchMetadataDocument(serializer: Serializer, input: SearchMetadata) {
    val COMPLETEDIN_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Double, JsonSerialName("completed_in"))
    val COUNT_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, JsonSerialName("count"))
    val MAXID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Long, JsonSerialName("max_id"))
    val MAXIDSTR_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("max_id_str"))
    val NEXTRESULTS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("next_results"))
    val QUERY_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("query"))
    val REFRESHURL_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("refresh_url"))
    val SINCEID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, JsonSerialName("since_id"))
    val SINCEIDSTR_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("since_id_str"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        field(COMPLETEDIN_DESCRIPTOR)
        field(COUNT_DESCRIPTOR)
        field(MAXID_DESCRIPTOR)
        field(MAXIDSTR_DESCRIPTOR)
        field(NEXTRESULTS_DESCRIPTOR)
        field(QUERY_DESCRIPTOR)
        field(REFRESHURL_DESCRIPTOR)
        field(SINCEID_DESCRIPTOR)
        field(SINCEIDSTR_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.completedIn?.let { field(COMPLETEDIN_DESCRIPTOR, it) }
        input.count?.let { field(COUNT_DESCRIPTOR, it) }
        input.maxId?.let { field(MAXID_DESCRIPTOR, it) }
        input.maxIdStr?.let { field(MAXIDSTR_DESCRIPTOR, it) }
        input.nextResults?.let { field(NEXTRESULTS_DESCRIPTOR, it) }
        input.query?.let { field(QUERY_DESCRIPTOR, it) }
        input.refreshUrl?.let { field(REFRESHURL_DESCRIPTOR, it) }
        input.sinceId?.let { field(SINCEID_DESCRIPTOR, it) }
        input.sinceIdStr?.let { field(SINCEIDSTR_DESCRIPTOR, it) }
    }
}
