/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0.
 */

// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.smithy.kotlin.serde.benchmarks.model.twitter

import aws.smithy.kotlin.runtime.serde.Deserializer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.json.JsonSerialName


internal suspend fun deserializeUserMentionDocument(deserializer: Deserializer): UserMention {
    val builder = UserMention.builder()
    val ID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, JsonSerialName("id"))
    val IDSTR_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("id_str"))
    val INDICES_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, JsonSerialName("indices"))
    val NAME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("name"))
    val SCREENNAME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("screen_name"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        field(ID_DESCRIPTOR)
        field(IDSTR_DESCRIPTOR)
        field(INDICES_DESCRIPTOR)
        field(NAME_DESCRIPTOR)
        field(SCREENNAME_DESCRIPTOR)
    }

    deserializer.deserializeStruct(OBJ_DESCRIPTOR) {
        loop@while (true) {
            when (findNextFieldIndex()) {
                ID_DESCRIPTOR.index -> builder.id = deserializeInt()
                IDSTR_DESCRIPTOR.index -> builder.idStr = deserializeString()
                INDICES_DESCRIPTOR.index -> builder.indices =
                    deserializer.deserializeList(INDICES_DESCRIPTOR) {
                        val col0 = mutableListOf<Int>()
                        while (hasNextElement()) {
                            val el0 = if (nextHasValue()) { deserializeInt() } else { deserializeNull(); continue }
                            col0.add(el0)
                        }
                        col0
                    }
                NAME_DESCRIPTOR.index -> builder.name = deserializeString()
                SCREENNAME_DESCRIPTOR.index -> builder.screenName = deserializeString()
                null -> break@loop
                else -> skipValue()
            }
        }
    }
    return builder.build()
}
