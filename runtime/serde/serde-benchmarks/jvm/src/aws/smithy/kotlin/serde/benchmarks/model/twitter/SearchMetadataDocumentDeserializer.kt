/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0.
 */

// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.smithy.kotlin.serde.benchmarks.model.twitter

import aws.smithy.kotlin.runtime.serde.Deserializer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.json.JsonSerialName


internal suspend fun deserializeSearchMetadataDocument(deserializer: Deserializer): SearchMetadata {
    val builder = SearchMetadata.builder()
    val COMPLETEDIN_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Double, JsonSerialName("completed_in"))
    val COUNT_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, JsonSerialName("count"))
    val MAXID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Long, JsonSerialName("max_id"))
    val MAXIDSTR_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("max_id_str"))
    val NEXTRESULTS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("next_results"))
    val QUERY_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("query"))
    val REFRESHURL_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("refresh_url"))
    val SINCEID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, JsonSerialName("since_id"))
    val SINCEIDSTR_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("since_id_str"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        field(COMPLETEDIN_DESCRIPTOR)
        field(COUNT_DESCRIPTOR)
        field(MAXID_DESCRIPTOR)
        field(MAXIDSTR_DESCRIPTOR)
        field(NEXTRESULTS_DESCRIPTOR)
        field(QUERY_DESCRIPTOR)
        field(REFRESHURL_DESCRIPTOR)
        field(SINCEID_DESCRIPTOR)
        field(SINCEIDSTR_DESCRIPTOR)
    }

    deserializer.deserializeStruct(OBJ_DESCRIPTOR) {
        loop@while (true) {
            when (findNextFieldIndex()) {
                COMPLETEDIN_DESCRIPTOR.index -> builder.completedIn = deserializeDouble()
                COUNT_DESCRIPTOR.index -> builder.count = deserializeInt()
                MAXID_DESCRIPTOR.index -> builder.maxId = deserializeLong()
                MAXIDSTR_DESCRIPTOR.index -> builder.maxIdStr = deserializeString()
                NEXTRESULTS_DESCRIPTOR.index -> builder.nextResults = deserializeString()
                QUERY_DESCRIPTOR.index -> builder.query = deserializeString()
                REFRESHURL_DESCRIPTOR.index -> builder.refreshUrl = deserializeString()
                SINCEID_DESCRIPTOR.index -> builder.sinceId = deserializeInt()
                SINCEIDSTR_DESCRIPTOR.index -> builder.sinceIdStr = deserializeString()
                null -> break@loop
                else -> skipValue()
            }
        }
    }
    return builder.build()
}
