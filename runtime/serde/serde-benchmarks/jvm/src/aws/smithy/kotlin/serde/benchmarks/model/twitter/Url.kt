/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0.
 */

// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.smithy.kotlin.serde.benchmarks.model.twitter



class Url private constructor(builder: BuilderImpl) {
    val displayUrl: String? = builder.displayUrl
    val expandedUrl: String? = builder.expandedUrl
    val indices: List<Int>? = builder.indices
    val url: String? = builder.url

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): Url = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("Url(")
        append("displayUrl=$displayUrl,")
        append("expandedUrl=$expandedUrl,")
        append("indices=$indices,")
        append("url=$url)")
    }

    override fun hashCode(): kotlin.Int {
        var result = displayUrl?.hashCode() ?: 0
        result = 31 * result + (expandedUrl?.hashCode() ?: 0)
        result = 31 * result + (indices?.hashCode() ?: 0)
        result = 31 * result + (url?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as Url

        if (displayUrl != other.displayUrl) return false
        if (expandedUrl != other.expandedUrl) return false
        if (indices != other.indices) return false
        if (url != other.url) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): Url = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): Url
        fun displayUrl(displayUrl: String): FluentBuilder
        fun expandedUrl(expandedUrl: String): FluentBuilder
        fun indices(indices: List<Int>): FluentBuilder
        fun url(url: String): FluentBuilder
    }

    interface DslBuilder {
        var displayUrl: String?
        var expandedUrl: String?
        var indices: List<Int>?
        var url: String?

        fun build(): Url
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var displayUrl: String? = null
        override var expandedUrl: String? = null
        override var indices: List<Int>? = null
        override var url: String? = null

        constructor(x: Url) : this() {
            this.displayUrl = x.displayUrl
            this.expandedUrl = x.expandedUrl
            this.indices = x.indices
            this.url = x.url
        }

        override fun build(): Url = Url(this)
        override fun displayUrl(displayUrl: String): FluentBuilder = apply { this.displayUrl = displayUrl }
        override fun expandedUrl(expandedUrl: String): FluentBuilder = apply { this.expandedUrl = expandedUrl }
        override fun indices(indices: List<Int>): FluentBuilder = apply { this.indices = indices }
        override fun url(url: String): FluentBuilder = apply { this.url = url }
    }
}
