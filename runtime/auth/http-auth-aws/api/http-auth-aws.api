public final class aws/smithy/kotlin/runtime/http/auth/AwsHttpSigner$Companion {
	public final fun invoke (Lkotlin/jvm/functions/Function1;)Laws/smithy/kotlin/runtime/http/auth/AwsHttpSigner;
}

public final class aws/smithy/kotlin/runtime/http/auth/AwsHttpSigner$Config {
	public fun <init> ()V
	public final fun getAlgorithm ()Laws/smithy/kotlin/runtime/auth/awssigning/AwsSigningAlgorithm;
	public final fun getExpiresAfter-FghU774 ()Lkotlin/time/Duration;
	public final fun getNormalizeUriPath ()Z
	public final fun getOmitSessionToken ()Z
	public final fun getService ()Ljava/lang/String;
	public final fun getSignatureType ()Laws/smithy/kotlin/runtime/auth/awssigning/AwsSignatureType;
	public final fun getSignedBodyHeader ()Laws/smithy/kotlin/runtime/auth/awssigning/AwsSignedBodyHeader;
	public final fun getSigner ()Laws/smithy/kotlin/runtime/auth/awssigning/AwsSigner;
	public final fun getUseDoubleUriEncode ()Z
	public final fun isUnsignedPayload ()Z
	public final fun setAlgorithm (Laws/smithy/kotlin/runtime/auth/awssigning/AwsSigningAlgorithm;)V
	public final fun setExpiresAfter-BwNAW2A (Lkotlin/time/Duration;)V
	public final fun setNormalizeUriPath (Z)V
	public final fun setOmitSessionToken (Z)V
	public final fun setService (Ljava/lang/String;)V
	public final fun setSignatureType (Laws/smithy/kotlin/runtime/auth/awssigning/AwsSignatureType;)V
	public final fun setSignedBodyHeader (Laws/smithy/kotlin/runtime/auth/awssigning/AwsSignedBodyHeader;)V
	public final fun setSigner (Laws/smithy/kotlin/runtime/auth/awssigning/AwsSigner;)V
	public final fun setUnsignedPayload (Z)V
	public final fun setUseDoubleUriEncode (Z)V
}

public final class aws/smithy/kotlin/runtime/http/auth/SigV4AuthSchemeKt {
}

